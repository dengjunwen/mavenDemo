package com.cgq.controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.alibaba.fastjson.JSON;
import com.cgq.model.Resource;
import com.cgq.model.Task;
import com.cgq.service.ResourceService;
import com.cgq.service.TaskService;
import com.cgq.util.ResultCode;

@Controller
public class TaskController {

	Logger LOG = LoggerFactory.getLogger(TaskController.class);

	private static int LIVE_IMG_WIDTH = 494;
	private static int LIVE_IMG_HEIGHT = 573;
	
	@Autowired
	private TaskService taskService;
	
	@Autowired
	private ResourceService resourceService;
	
	@RequestMapping("/manage/tasks")
	public String index(Model model, HttpServletRequest request, HttpServletResponse response) throws IOException {
		return "tasks/tasks";
	}

	@RequestMapping("/manage/tasks/addLiveTask")
	public String toAddPdfTask(Model model, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		return "tasks/addLiveTask";
	}

	@ResponseBody
	@RequestMapping("/manage/tasks/uploadLivePDF")
	public String uploadLivePDF(HttpServletRequest request,
			HttpServletResponse response){
		try {
			MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
			Resource resource = resourceService.uploadFileResouce(multipartRequest, ResultCode.SOURCE_TEACHER_COURSE_UPLOAD);
			return resource.getId().toString();
		} catch (Exception e) {
			// TODO: handle exception
			LOG.error(e.getMessage(), e.fillInStackTrace());
			return "fail";
		}
	}
	
	@ResponseBody
	@RequestMapping("/manage/tasks/saveLiveTask")
	public String saveLiveTask(HttpServletRequest request,String taskname,Integer resourceid,
			HttpServletResponse response) throws IOException {
		try {
			taskService.addLiveTask(resourceid,taskname,LIVE_IMG_WIDTH,LIVE_IMG_HEIGHT);
			return "success";
		} catch (Exception e) {
			// TODO: handle exception
			LOG.error(e.getMessage());
			return "fail";
		}
	}

	@ResponseBody
	@RequestMapping("/manage/tasks/list")
	public Object list(Model model, HttpServletRequest request, HttpServletResponse response) throws IOException {
		try {
			return JSON.toJSONString(taskService.listAll());
		} catch (Exception e) {
			// TODO: handle exception
			LOG.error(e.toString());
			return "fail";
		}
	}

	@ResponseBody
	@RequestMapping("/manage/tasks/listEffectiveTask")
	public List<Task> listEffectiveTask(Model model, HttpServletRequest request, HttpServletResponse response) {
		try {
			return taskService.listEffectiveTask();
		} catch (Exception e) {
			// TODO: handle exception
			LOG.error(e.toString());
			return null;
		}
	}
}
